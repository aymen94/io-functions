{% macro exportConst(defaultValue, type, typedef, quote = false) %}
  {% if defaultValue !== undefined %}
    {% set typeName = type + "X" %}
    {% set q = '"' if quote else "" %}
    import * as t from "io-ts";

    import { withDefault } from "../../utils/default";

    const {{ typeName }} = {{ typedef | safe }};

    const defaultValue = t.validate({{ q | safe }}{{ defaultValue }}{{ q | safe }}, {{ typeName }}).fold(_ => {
      throw new Error("Invalid default value for {{ type }}");
    }, t.identity);

    export const {{ type }} = withDefault({{ typeName }}, defaultValue);

  {% else %}
    export const {{ type }} = {{ typedef | safe }};
  {% endif %}
{% endmacro %}
